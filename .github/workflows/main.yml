name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 17

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Build Docker image
        run: docker build -t maxbussinesssolutions/app .

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image to Docker Hub
        run: docker push maxbussinesssolutions/app:latest

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Create Directory on Server
        run: |
          sshpass -p "${{ secrets.HOSTINGER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }} "mkdir -p /home/user/backend"
        env:
          HOSTINGER_USER: ${{ secrets.HOSTINGER_USER }}
          HOSTINGER_HOST: ${{ secrets.HOSTINGER_HOST }}
          HOSTINGER_PASSWORD: ${{ secrets.HOSTINGER_PASSWORD }}

      - name: List files in current directory
        run: ls -al

      - name: Transfer Docker Compose file
        run: |
          sshpass -p "${{ secrets.HOSTINGER_PASSWORD }}" scp -o StrictHostKeyChecking=no compose.yml ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }}:/home/user/backend/compose.yml
        env:
          HOSTINGER_USER: ${{ secrets.HOSTINGER_USER }}
          HOSTINGER_HOST: ${{ secrets.HOSTINGER_HOST }}
          HOSTINGER_PASSWORD: ${{ secrets.HOSTINGER_PASSWORD }}

      - name: Check and Install Docker Compose on Server
        run: |
          sshpass -p "${{ secrets.HOSTINGER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }} <<EOF
          if ! [ -x "/usr/local/bin/docker-compose" ]; then
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-\$(uname -s)-\$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          else
            echo "Docker Compose is already installed"
          fi
          EOF
        env:
          HOSTINGER_USER: ${{ secrets.HOSTINGER_USER }}
          HOSTINGER_HOST: ${{ secrets.HOSTINGER_HOST }}
          HOSTINGER_PASSWORD: ${{ secrets.HOSTINGER_PASSWORD }}

      - name: Deploy to Hostinger
        run: |
          sshpass -p "${{ secrets.HOSTINGER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }} <<EOF
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          cd /home/user/backend
          docker-compose down
          docker volume prune -f
          docker network prune -f
          docker-compose up -d
          EOF
        env:
          HOSTINGER_USER: ${{ secrets.HOSTINGER_USER }}
          HOSTINGER_HOST: ${{ secrets.HOSTINGER_HOST }}
          HOSTINGER_PASSWORD: ${{ secrets.HOSTINGER_PASSWORD }}
